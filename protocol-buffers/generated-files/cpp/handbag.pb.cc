// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: handbag.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "handbag.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Research {
namespace ProtoBuf {

namespace {

const ::google::protobuf::Descriptor* Handbag_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Handbag_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_handbag_2eproto() {
  protobuf_AddDesc_handbag_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "handbag.proto");
  GOOGLE_CHECK(file != NULL);
  Handbag_descriptor_ = file->message_type(0);
  static const int Handbag_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Handbag, book_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Handbag, purse_),
  };
  Handbag_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Handbag_descriptor_,
      Handbag::default_instance_,
      Handbag_offsets_,
      -1,
      -1,
      -1,
      sizeof(Handbag),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Handbag, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Handbag, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_handbag_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Handbag_descriptor_, &Handbag::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_handbag_2eproto() {
  delete Handbag::default_instance_;
  delete Handbag_reflection_;
}

void protobuf_AddDesc_handbag_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_address_5fbook_2eproto();
  ::Research::ProtoBuf::protobuf_AddDesc_wallet_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rhandbag.proto\022\021Research.ProtoBuf\032\022addr"
    "ess_book.proto\032\014wallet.proto\"O\n\007Handbag\022"
    "\032\n\004book\030\001 \001(\0132\014.AddressBook\022(\n\005purse\030\002 \001"
    "(\0132\031.Research.ProtoBuf.Walletb\006proto3", 157);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "handbag.proto", &protobuf_RegisterTypes);
  Handbag::default_instance_ = new Handbag();
  Handbag::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_handbag_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_handbag_2eproto {
  StaticDescriptorInitializer_handbag_2eproto() {
    protobuf_AddDesc_handbag_2eproto();
  }
} static_descriptor_initializer_handbag_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Handbag::kBookFieldNumber;
const int Handbag::kPurseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Handbag::Handbag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Research.ProtoBuf.Handbag)
}

void Handbag::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  book_ = const_cast< ::AddressBook*>(&::AddressBook::default_instance());
  purse_ = const_cast< ::Research::ProtoBuf::Wallet*>(&::Research::ProtoBuf::Wallet::default_instance());
}

Handbag::Handbag(const Handbag& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Research.ProtoBuf.Handbag)
}

void Handbag::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  book_ = NULL;
  purse_ = NULL;
}

Handbag::~Handbag() {
  // @@protoc_insertion_point(destructor:Research.ProtoBuf.Handbag)
  SharedDtor();
}

void Handbag::SharedDtor() {
  if (this != default_instance_) {
    delete book_;
    delete purse_;
  }
}

void Handbag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Handbag::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Handbag_descriptor_;
}

const Handbag& Handbag::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_handbag_2eproto();
  return *default_instance_;
}

Handbag* Handbag::default_instance_ = NULL;

Handbag* Handbag::New(::google::protobuf::Arena* arena) const {
  Handbag* n = new Handbag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Handbag::Clear() {
  if (GetArenaNoVirtual() == NULL && book_ != NULL) delete book_;
  book_ = NULL;
  if (GetArenaNoVirtual() == NULL && purse_ != NULL) delete purse_;
  purse_ = NULL;
}

bool Handbag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Research.ProtoBuf.Handbag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .AddressBook book = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_book()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_purse;
        break;
      }

      // optional .Research.ProtoBuf.Wallet purse = 2;
      case 2: {
        if (tag == 18) {
         parse_purse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_purse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Research.ProtoBuf.Handbag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Research.ProtoBuf.Handbag)
  return false;
#undef DO_
}

void Handbag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Research.ProtoBuf.Handbag)
  // optional .AddressBook book = 1;
  if (this->has_book()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->book_, output);
  }

  // optional .Research.ProtoBuf.Wallet purse = 2;
  if (this->has_purse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->purse_, output);
  }

  // @@protoc_insertion_point(serialize_end:Research.ProtoBuf.Handbag)
}

::google::protobuf::uint8* Handbag::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Research.ProtoBuf.Handbag)
  // optional .AddressBook book = 1;
  if (this->has_book()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->book_, target);
  }

  // optional .Research.ProtoBuf.Wallet purse = 2;
  if (this->has_purse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->purse_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Research.ProtoBuf.Handbag)
  return target;
}

int Handbag::ByteSize() const {
  int total_size = 0;

  // optional .AddressBook book = 1;
  if (this->has_book()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->book_);
  }

  // optional .Research.ProtoBuf.Wallet purse = 2;
  if (this->has_purse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->purse_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Handbag::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Handbag* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Handbag>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Handbag::MergeFrom(const Handbag& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_book()) {
    mutable_book()->::AddressBook::MergeFrom(from.book());
  }
  if (from.has_purse()) {
    mutable_purse()->::Research::ProtoBuf::Wallet::MergeFrom(from.purse());
  }
}

void Handbag::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Handbag::CopyFrom(const Handbag& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Handbag::IsInitialized() const {

  return true;
}

void Handbag::Swap(Handbag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Handbag::InternalSwap(Handbag* other) {
  std::swap(book_, other->book_);
  std::swap(purse_, other->purse_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Handbag::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Handbag_descriptor_;
  metadata.reflection = Handbag_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Handbag

// optional .AddressBook book = 1;
bool Handbag::has_book() const {
  return !_is_default_instance_ && book_ != NULL;
}
void Handbag::clear_book() {
  if (GetArenaNoVirtual() == NULL && book_ != NULL) delete book_;
  book_ = NULL;
}
const ::AddressBook& Handbag::book() const {
  // @@protoc_insertion_point(field_get:Research.ProtoBuf.Handbag.book)
  return book_ != NULL ? *book_ : *default_instance_->book_;
}
::AddressBook* Handbag::mutable_book() {
  
  if (book_ == NULL) {
    book_ = new ::AddressBook;
  }
  // @@protoc_insertion_point(field_mutable:Research.ProtoBuf.Handbag.book)
  return book_;
}
::AddressBook* Handbag::release_book() {
  
  ::AddressBook* temp = book_;
  book_ = NULL;
  return temp;
}
void Handbag::set_allocated_book(::AddressBook* book) {
  delete book_;
  book_ = book;
  if (book) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Research.ProtoBuf.Handbag.book)
}

// optional .Research.ProtoBuf.Wallet purse = 2;
bool Handbag::has_purse() const {
  return !_is_default_instance_ && purse_ != NULL;
}
void Handbag::clear_purse() {
  if (GetArenaNoVirtual() == NULL && purse_ != NULL) delete purse_;
  purse_ = NULL;
}
const ::Research::ProtoBuf::Wallet& Handbag::purse() const {
  // @@protoc_insertion_point(field_get:Research.ProtoBuf.Handbag.purse)
  return purse_ != NULL ? *purse_ : *default_instance_->purse_;
}
::Research::ProtoBuf::Wallet* Handbag::mutable_purse() {
  
  if (purse_ == NULL) {
    purse_ = new ::Research::ProtoBuf::Wallet;
  }
  // @@protoc_insertion_point(field_mutable:Research.ProtoBuf.Handbag.purse)
  return purse_;
}
::Research::ProtoBuf::Wallet* Handbag::release_purse() {
  
  ::Research::ProtoBuf::Wallet* temp = purse_;
  purse_ = NULL;
  return temp;
}
void Handbag::set_allocated_purse(::Research::ProtoBuf::Wallet* purse) {
  delete purse_;
  purse_ = purse;
  if (purse) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Research.ProtoBuf.Handbag.purse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf
}  // namespace Research

// @@protoc_insertion_point(global_scope)
