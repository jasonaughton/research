// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wallet.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "wallet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Research {
namespace ProtoBuf {

namespace {

const ::google::protobuf::Descriptor* Wallet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Wallet_reflection_ = NULL;
const ::google::protobuf::Descriptor* Wallet_Card_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Wallet_Card_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Wallet_CardType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_wallet_2eproto() {
  protobuf_AddDesc_wallet_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "wallet.proto");
  GOOGLE_CHECK(file != NULL);
  Wallet_descriptor_ = file->message_type(0);
  static const int Wallet_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wallet, cards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wallet, cash_),
  };
  Wallet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Wallet_descriptor_,
      Wallet::default_instance_,
      Wallet_offsets_,
      -1,
      -1,
      -1,
      sizeof(Wallet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wallet, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wallet, _is_default_instance_));
  Wallet_Card_descriptor_ = Wallet_descriptor_->nested_type(0);
  static const int Wallet_Card_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wallet_Card, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wallet_Card, vendor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wallet_Card, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wallet_Card, expiry_),
  };
  Wallet_Card_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Wallet_Card_descriptor_,
      Wallet_Card::default_instance_,
      Wallet_Card_offsets_,
      -1,
      -1,
      -1,
      sizeof(Wallet_Card),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wallet_Card, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Wallet_Card, _is_default_instance_));
  Wallet_CardType_descriptor_ = Wallet_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_wallet_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Wallet_descriptor_, &Wallet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Wallet_Card_descriptor_, &Wallet_Card::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_wallet_2eproto() {
  delete Wallet::default_instance_;
  delete Wallet_reflection_;
  delete Wallet_Card::default_instance_;
  delete Wallet_Card_reflection_;
}

void protobuf_AddDesc_wallet_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014wallet.proto\022\021Research.ProtoBuf\"\335\001\n\006Wa"
    "llet\022-\n\005cards\030\001 \003(\0132\036.Research.ProtoBuf."
    "Wallet.Card\022\014\n\004cash\030\002 \001(\005\032h\n\004Card\0220\n\004typ"
    "e\030\001 \001(\0162\".Research.ProtoBuf.Wallet.CardT"
    "ype\022\016\n\006vendor\030\002 \001(\t\022\016\n\006number\030\003 \001(\t\022\016\n\006e"
    "xpiry\030\004 \001(\t\",\n\010CardType\022\t\n\005Debit\020\000\022\n\n\006Cr"
    "edit\020\001\022\t\n\005Store\020\002b\006proto3", 265);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "wallet.proto", &protobuf_RegisterTypes);
  Wallet::default_instance_ = new Wallet();
  Wallet_Card::default_instance_ = new Wallet_Card();
  Wallet::default_instance_->InitAsDefaultInstance();
  Wallet_Card::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_wallet_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_wallet_2eproto {
  StaticDescriptorInitializer_wallet_2eproto() {
    protobuf_AddDesc_wallet_2eproto();
  }
} static_descriptor_initializer_wallet_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* Wallet_CardType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Wallet_CardType_descriptor_;
}
bool Wallet_CardType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Wallet_CardType Wallet::Debit;
const Wallet_CardType Wallet::Credit;
const Wallet_CardType Wallet::Store;
const Wallet_CardType Wallet::CardType_MIN;
const Wallet_CardType Wallet::CardType_MAX;
const int Wallet::CardType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Wallet_Card::kTypeFieldNumber;
const int Wallet_Card::kVendorFieldNumber;
const int Wallet_Card::kNumberFieldNumber;
const int Wallet_Card::kExpiryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Wallet_Card::Wallet_Card()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Research.ProtoBuf.Wallet.Card)
}

void Wallet_Card::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Wallet_Card::Wallet_Card(const Wallet_Card& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Research.ProtoBuf.Wallet.Card)
}

void Wallet_Card::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Wallet_Card::~Wallet_Card() {
  // @@protoc_insertion_point(destructor:Research.ProtoBuf.Wallet.Card)
  SharedDtor();
}

void Wallet_Card::SharedDtor() {
  vendor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiry_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Wallet_Card::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Wallet_Card::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Wallet_Card_descriptor_;
}

const Wallet_Card& Wallet_Card::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_wallet_2eproto();
  return *default_instance_;
}

Wallet_Card* Wallet_Card::default_instance_ = NULL;

Wallet_Card* Wallet_Card::New(::google::protobuf::Arena* arena) const {
  Wallet_Card* n = new Wallet_Card;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Wallet_Card::Clear() {
  type_ = 0;
  vendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Wallet_Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Research.ProtoBuf.Wallet.Card)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Research.ProtoBuf.Wallet.CardType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::Research::ProtoBuf::Wallet_CardType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_vendor;
        break;
      }

      // optional string vendor = 2;
      case 2: {
        if (tag == 18) {
         parse_vendor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vendor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vendor().data(), this->vendor().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Research.ProtoBuf.Wallet.Card.vendor"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_number;
        break;
      }

      // optional string number = 3;
      case 3: {
        if (tag == 26) {
         parse_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->number().data(), this->number().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Research.ProtoBuf.Wallet.Card.number"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_expiry;
        break;
      }

      // optional string expiry = 4;
      case 4: {
        if (tag == 34) {
         parse_expiry:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expiry()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expiry().data(), this->expiry().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Research.ProtoBuf.Wallet.Card.expiry"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Research.ProtoBuf.Wallet.Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Research.ProtoBuf.Wallet.Card)
  return false;
#undef DO_
}

void Wallet_Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Research.ProtoBuf.Wallet.Card)
  // optional .Research.ProtoBuf.Wallet.CardType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string vendor = 2;
  if (this->vendor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor().data(), this->vendor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Research.ProtoBuf.Wallet.Card.vendor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vendor(), output);
  }

  // optional string number = 3;
  if (this->number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Research.ProtoBuf.Wallet.Card.number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->number(), output);
  }

  // optional string expiry = 4;
  if (this->expiry().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiry().data(), this->expiry().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Research.ProtoBuf.Wallet.Card.expiry");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->expiry(), output);
  }

  // @@protoc_insertion_point(serialize_end:Research.ProtoBuf.Wallet.Card)
}

::google::protobuf::uint8* Wallet_Card::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Research.ProtoBuf.Wallet.Card)
  // optional .Research.ProtoBuf.Wallet.CardType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string vendor = 2;
  if (this->vendor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor().data(), this->vendor().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Research.ProtoBuf.Wallet.Card.vendor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vendor(), target);
  }

  // optional string number = 3;
  if (this->number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Research.ProtoBuf.Wallet.Card.number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->number(), target);
  }

  // optional string expiry = 4;
  if (this->expiry().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expiry().data(), this->expiry().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Research.ProtoBuf.Wallet.Card.expiry");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->expiry(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Research.ProtoBuf.Wallet.Card)
  return target;
}

int Wallet_Card::ByteSize() const {
  int total_size = 0;

  // optional .Research.ProtoBuf.Wallet.CardType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional string vendor = 2;
  if (this->vendor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vendor());
  }

  // optional string number = 3;
  if (this->number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->number());
  }

  // optional string expiry = 4;
  if (this->expiry().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->expiry());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Wallet_Card::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Wallet_Card* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Wallet_Card>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Wallet_Card::MergeFrom(const Wallet_Card& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.vendor().size() > 0) {

    vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_);
  }
  if (from.number().size() > 0) {

    number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
  }
  if (from.expiry().size() > 0) {

    expiry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expiry_);
  }
}

void Wallet_Card::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Wallet_Card::CopyFrom(const Wallet_Card& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Wallet_Card::IsInitialized() const {

  return true;
}

void Wallet_Card::Swap(Wallet_Card* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Wallet_Card::InternalSwap(Wallet_Card* other) {
  std::swap(type_, other->type_);
  vendor_.Swap(&other->vendor_);
  number_.Swap(&other->number_);
  expiry_.Swap(&other->expiry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Wallet_Card::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Wallet_Card_descriptor_;
  metadata.reflection = Wallet_Card_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Wallet::kCardsFieldNumber;
const int Wallet::kCashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Wallet::Wallet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Research.ProtoBuf.Wallet)
}

void Wallet::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Wallet::Wallet(const Wallet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Research.ProtoBuf.Wallet)
}

void Wallet::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  cash_ = 0;
}

Wallet::~Wallet() {
  // @@protoc_insertion_point(destructor:Research.ProtoBuf.Wallet)
  SharedDtor();
}

void Wallet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Wallet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Wallet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Wallet_descriptor_;
}

const Wallet& Wallet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_wallet_2eproto();
  return *default_instance_;
}

Wallet* Wallet::default_instance_ = NULL;

Wallet* Wallet::New(::google::protobuf::Arena* arena) const {
  Wallet* n = new Wallet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Wallet::Clear() {
  cash_ = 0;
  cards_.Clear();
}

bool Wallet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Research.ProtoBuf.Wallet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Research.ProtoBuf.Wallet.Card cards = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_cards:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_cards()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_cards;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_cash;
        break;
      }

      // optional int32 cash = 2;
      case 2: {
        if (tag == 16) {
         parse_cash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Research.ProtoBuf.Wallet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Research.ProtoBuf.Wallet)
  return false;
#undef DO_
}

void Wallet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Research.ProtoBuf.Wallet)
  // repeated .Research.ProtoBuf.Wallet.Card cards = 1;
  for (unsigned int i = 0, n = this->cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cards(i), output);
  }

  // optional int32 cash = 2;
  if (this->cash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cash(), output);
  }

  // @@protoc_insertion_point(serialize_end:Research.ProtoBuf.Wallet)
}

::google::protobuf::uint8* Wallet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Research.ProtoBuf.Wallet)
  // repeated .Research.ProtoBuf.Wallet.Card cards = 1;
  for (unsigned int i = 0, n = this->cards_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cards(i), target);
  }

  // optional int32 cash = 2;
  if (this->cash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cash(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Research.ProtoBuf.Wallet)
  return target;
}

int Wallet::ByteSize() const {
  int total_size = 0;

  // optional int32 cash = 2;
  if (this->cash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cash());
  }

  // repeated .Research.ProtoBuf.Wallet.Card cards = 1;
  total_size += 1 * this->cards_size();
  for (int i = 0; i < this->cards_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cards(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Wallet::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Wallet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Wallet>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Wallet::MergeFrom(const Wallet& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  cards_.MergeFrom(from.cards_);
  if (from.cash() != 0) {
    set_cash(from.cash());
  }
}

void Wallet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Wallet::CopyFrom(const Wallet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Wallet::IsInitialized() const {

  return true;
}

void Wallet::Swap(Wallet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Wallet::InternalSwap(Wallet* other) {
  cards_.UnsafeArenaSwap(&other->cards_);
  std::swap(cash_, other->cash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Wallet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Wallet_descriptor_;
  metadata.reflection = Wallet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Wallet_Card

// optional .Research.ProtoBuf.Wallet.CardType type = 1;
void Wallet_Card::clear_type() {
  type_ = 0;
}
 ::Research::ProtoBuf::Wallet_CardType Wallet_Card::type() const {
  // @@protoc_insertion_point(field_get:Research.ProtoBuf.Wallet.Card.type)
  return static_cast< ::Research::ProtoBuf::Wallet_CardType >(type_);
}
 void Wallet_Card::set_type(::Research::ProtoBuf::Wallet_CardType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Research.ProtoBuf.Wallet.Card.type)
}

// optional string vendor = 2;
void Wallet_Card::clear_vendor() {
  vendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Wallet_Card::vendor() const {
  // @@protoc_insertion_point(field_get:Research.ProtoBuf.Wallet.Card.vendor)
  return vendor_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Wallet_Card::set_vendor(const ::std::string& value) {
  
  vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Research.ProtoBuf.Wallet.Card.vendor)
}
 void Wallet_Card::set_vendor(const char* value) {
  
  vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Research.ProtoBuf.Wallet.Card.vendor)
}
 void Wallet_Card::set_vendor(const char* value, size_t size) {
  
  vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Research.ProtoBuf.Wallet.Card.vendor)
}
 ::std::string* Wallet_Card::mutable_vendor() {
  
  // @@protoc_insertion_point(field_mutable:Research.ProtoBuf.Wallet.Card.vendor)
  return vendor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Wallet_Card::release_vendor() {
  
  return vendor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Wallet_Card::set_allocated_vendor(::std::string* vendor) {
  if (vendor != NULL) {
    
  } else {
    
  }
  vendor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vendor);
  // @@protoc_insertion_point(field_set_allocated:Research.ProtoBuf.Wallet.Card.vendor)
}

// optional string number = 3;
void Wallet_Card::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Wallet_Card::number() const {
  // @@protoc_insertion_point(field_get:Research.ProtoBuf.Wallet.Card.number)
  return number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Wallet_Card::set_number(const ::std::string& value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Research.ProtoBuf.Wallet.Card.number)
}
 void Wallet_Card::set_number(const char* value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Research.ProtoBuf.Wallet.Card.number)
}
 void Wallet_Card::set_number(const char* value, size_t size) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Research.ProtoBuf.Wallet.Card.number)
}
 ::std::string* Wallet_Card::mutable_number() {
  
  // @@protoc_insertion_point(field_mutable:Research.ProtoBuf.Wallet.Card.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Wallet_Card::release_number() {
  
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Wallet_Card::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    
  } else {
    
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:Research.ProtoBuf.Wallet.Card.number)
}

// optional string expiry = 4;
void Wallet_Card::clear_expiry() {
  expiry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Wallet_Card::expiry() const {
  // @@protoc_insertion_point(field_get:Research.ProtoBuf.Wallet.Card.expiry)
  return expiry_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Wallet_Card::set_expiry(const ::std::string& value) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Research.ProtoBuf.Wallet.Card.expiry)
}
 void Wallet_Card::set_expiry(const char* value) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Research.ProtoBuf.Wallet.Card.expiry)
}
 void Wallet_Card::set_expiry(const char* value, size_t size) {
  
  expiry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Research.ProtoBuf.Wallet.Card.expiry)
}
 ::std::string* Wallet_Card::mutable_expiry() {
  
  // @@protoc_insertion_point(field_mutable:Research.ProtoBuf.Wallet.Card.expiry)
  return expiry_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Wallet_Card::release_expiry() {
  
  return expiry_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Wallet_Card::set_allocated_expiry(::std::string* expiry) {
  if (expiry != NULL) {
    
  } else {
    
  }
  expiry_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expiry);
  // @@protoc_insertion_point(field_set_allocated:Research.ProtoBuf.Wallet.Card.expiry)
}

// -------------------------------------------------------------------

// Wallet

// repeated .Research.ProtoBuf.Wallet.Card cards = 1;
int Wallet::cards_size() const {
  return cards_.size();
}
void Wallet::clear_cards() {
  cards_.Clear();
}
const ::Research::ProtoBuf::Wallet_Card& Wallet::cards(int index) const {
  // @@protoc_insertion_point(field_get:Research.ProtoBuf.Wallet.cards)
  return cards_.Get(index);
}
::Research::ProtoBuf::Wallet_Card* Wallet::mutable_cards(int index) {
  // @@protoc_insertion_point(field_mutable:Research.ProtoBuf.Wallet.cards)
  return cards_.Mutable(index);
}
::Research::ProtoBuf::Wallet_Card* Wallet::add_cards() {
  // @@protoc_insertion_point(field_add:Research.ProtoBuf.Wallet.cards)
  return cards_.Add();
}
::google::protobuf::RepeatedPtrField< ::Research::ProtoBuf::Wallet_Card >*
Wallet::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:Research.ProtoBuf.Wallet.cards)
  return &cards_;
}
const ::google::protobuf::RepeatedPtrField< ::Research::ProtoBuf::Wallet_Card >&
Wallet::cards() const {
  // @@protoc_insertion_point(field_list:Research.ProtoBuf.Wallet.cards)
  return cards_;
}

// optional int32 cash = 2;
void Wallet::clear_cash() {
  cash_ = 0;
}
 ::google::protobuf::int32 Wallet::cash() const {
  // @@protoc_insertion_point(field_get:Research.ProtoBuf.Wallet.cash)
  return cash_;
}
 void Wallet::set_cash(::google::protobuf::int32 value) {
  
  cash_ = value;
  // @@protoc_insertion_point(field_set:Research.ProtoBuf.Wallet.cash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoBuf
}  // namespace Research

// @@protoc_insertion_point(global_scope)
